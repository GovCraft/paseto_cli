#!/usr/bin/env node

const path = require("path");
const childProcess = require("child_process");

// Lookup table for all platforms and binary distribution packages
const BINARY_DISTRIBUTION_PACKAGES = {
    'linux-x64': 'paseto_cli-linux-x64',
    'darwin-x64': 'paseto_cli-darwin-x64',
    'darwin-aarch64': 'paseto_cli-darwin-aarch64',
    'win32-x64': 'paseto_cli-win32-x64'
};

// Windows binaries end with .exe so we need to special case them.
const binaryName = process.platform === "win32" ? "paseto_cli.exe" : "paseto_cli";


// Determine package name for this platform
const platformSpecificPackageName = BINARY_DISTRIBUTION_PACKAGES[`${process.platform}-${process.arch}`];

function getBinaryPath() {
    try {
        // Resolving will fail if the optionalDependency was not installed
        return require.resolve(`${platformSpecificPackageName}/bin/${binaryName}`);
    } catch (e) {
        return path.join(__dirname, "..", binaryName);
    }
}
const binaryPath = getBinaryPath();
console.log(`Binary path to be executed: ${binaryPath}`);

const child = childProcess.spawn(binaryPath, process.argv.slice(2), {
    stdio: "inherit",
    detached: true
});

// Log child process events for debugging
child.on('error', (err) => {
    console.error('Failed to start child process.', err);
});
child.on('exit', (code, signal) => {
    console.log(`Child process exited with code ${code} and signal ${signal}`);
});

// Detach the child process from the parent process
// child.unref();